getRank( score, rank, scoreboard ) {

	Loop over scores in scoreboard.
	If score = scoreboard[i], rank = i+1 ( Ranks are not zero-indexed, ranks are determined using dense ranking ).

	If score < scoreboard[i], rank = i+2
	100 86 85 77 65 61 54 50 45 30 20 10 5
	0   1  2  3  4  5  6  7  8  9  10 11 12
	1   2  3  4  5  6  7  8  9  10 11 12 13

	52
	Start searching from i = 12 ( scoreboard.size() - 1 )
	i = 6
	rank = 8

	60
	Start searching from i = 7 ( rank - 1 );

}	

For the most part this works. The scores are cumulative, so score[i] >= score[i-1].


SPECIAL CASES

score[i] = score[i-1]
	No special handling required.

score[i] is the lowest score.
	Rank = scoreboard.size();

NOTE

We don't need to worry about inserting Alice's score in the scoreboard. Her score always increases or stays the same, so the rank she receives for each score is not affected by her previous scores.
